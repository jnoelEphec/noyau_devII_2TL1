@startuml

skinparam class {
    BackgroundColor white
    ArrowColor black
    BorderColor grey
}

title
    UML Diagram
    <i>Group 2TL1-5</i>
end title

legend bottom center
    Une <i>Session</i> est créée à la connection d'un <i>User</i>. Elle permettra à l'utilisateur connecté de lister et
    manipuler ses <i>Conversation</i>s, d'y envoyer des <i>Message</i>s et d'en créer de nouvelles.

    Chaque conversation peut être un <i>Group</i> (une conversation entre un nombre arbitraire d'<i>User</i>s en plus
    de l'utilisateur connecté) ou une conversation <i>Private</i> (entre l'utilisateur connecté et un autre
    <i>User</i>). Les conversations permettent à l'utilisateur d'y envoyer des messages et de lister leurs membres. Un
    des utilisateurs d'un groupe est l'owner, c'est-à-dire la personne ayant le plus de droits dans le groupe
    (Notamment, c'est le seul utilisateur autorisé à retirer des membres arbitraire d'un groupe, les autres membres ne
    pouvant que se retirer eux-même).

    Chaque conversation possède un nombre arbitraire de <i>Message</i>s, envoyé par un des utilisateurs membre de la
    conversation.
end legend

abstract class Conversation {
    +id: int readOnly
    -messages: List[Message] ordered
    --
    +messages() -> List[Message]
    +send(msg: Message)
    +update_messages() -> List[Message]
}

class Private {
    +to: User readOnly
    --
    send(msg: Message)
}
Private --|> Conversation

class Group {
    -members: List[User]
    -name: str
    +owner: User readOnly
    --
    +add_member(performer: User, invitee: User)
    +remove_member(performer: User, kickee: User)
    +members() -> List[User]
    +name() -> str
    +send(msg: Message)
    +set_name(performer: User, name: str)
    +update_members()
}
Group --|> Conversation

class Message {
    +id: int readOnly
    +sender: User readOnly
    -text: str
    --
    +text() -> str
    +set_text(performer: User, txt: str)
}

Message "*" --* "1" Conversation

class User {
    +name: str readOnly
    --
}
User "*" --o "*" Message
User "1" --* "1" Private
User "*" --* "*" Group

class Session {
    -conversations: List[Conversation]
    -current_user: Union[None, User]
    -current_conversation: Conversation
    --
    +{static} log_in(user: User, password: str) -> Session
    +add_to_group(group: Group, user: User)
    +create_group()
    +log_off()
    +remove_from_group(group: Group, user: User)
    +send(to: Conversation, msg: Message)
    +switch_conversation(to: Conversation)
    +update_current_conversation()
    +update_background_conversations()
}
Session "0..1" *-- "1" User
Session "1" *-- "*" Conversation

@enduml
